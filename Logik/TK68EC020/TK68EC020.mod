MODEL
MODEL_VERSION "v1998.8";
DESIGN "TK68EC020";

/* port names and type */
INPUT S:PIN38 = CLK_PLL;
INPUT S:PIN2 = A<5>;
INPUT S:PIN5 = A<4>;
INPUT S:PIN12 = A<2>;
INPUT S:PIN113 = MEM_CFG<1>;
INPUT S:PIN115 = MEM_CFG<0>;
INPUT S:PIN51 = BGACK_000;
INPUT S:PIN50 = BR_000;
INPUT S:PIN125 = IDE_WAIT;
INPUT S:PIN135 = A<1>;
INPUT S:PIN6 = A<3>;
INPUT S:PIN140 = A<6>;
INPUT S:PIN21 = A<23>;
INPUT S:PIN17 = A<22>;
INPUT S:PIN9 = A<21>;
INPUT S:PIN136 = A<20>;
INPUT S:PIN14 = A<19>;
INPUT S:PIN48 = A<18>;
INPUT S:PIN137 = A<17>;
INPUT S:PIN10 = A<16>;
INPUT S:PIN44 = VPA;
INPUT S:PIN142 = BG_020;
INPUT S:PIN27 = IPL_000<0>;
INPUT S:PIN33 = IPL_000<1>;
INPUT S:PIN34 = IPL_000<2>;
INPUT S:PIN112 = FC<0>;
INPUT S:PIN111 = FC<1>;
INPUT S:PIN13 = A<9>;
INPUT S:PIN11 = A<8>;
INPUT S:PIN16 = A<10>;
INPUT S:PIN43 = A<11>;
INPUT S:PIN41 = A<12>;
INPUT S:PIN139 = A<13>;
INPUT S:PIN45 = A<14>;
INPUT S:PIN138 = A<15>;
INPUT S:PIN3 = A<7>;
INPUT S:PIN30 = CLK_000;
INPUT S:PIN143 = RESET;
INPUT S:PIN116 = AUTO_BOOT;
TRIOUT S:PIN40 = RW_020;
TRIOUT S:PIN35 = AS_020;
TRIOUT S:PIN57 = UDS_000;
TRIOUT S:PIN56 = LDS_000;
TRIOUT S:PIN58 = AS_000;
TRIOUT S:PIN39 = DS_020;
TRIOUT S:PIN54 = RW_000;
TRIOUT S:PIN64 = D<28>;
TRIOUT S:PIN66 = D<29>;
TRIOUT S:PIN68 = D<30>;
TRIOUT S:PIN69 = D<31>;
TRIOUT S:PIN24 = SIZE<1>;
TRIOUT S:PIN20 = SIZE<0>;
TRIOUT S:PIN4 = A_0;
TRIOUT S:PIN107 = BERR;
TRIOUT S:PIN53 = DTACK;
OUTPUT S:PIN52 = BG_000;
OUTPUT S:PIN134 = BR_020;
OUTPUT S:PIN23 = IPL_020<0>;
OUTPUT S:PIN22 = IPL_020<1>;
OUTPUT S:PIN19 = IPL_020<2>;
OUTPUT S:PIN71 = OE_020_RAM;
OUTPUT S:PIN74 = OE_RAM_020;
OUTPUT S:PIN118 = ROM_EN;
OUTPUT S:PIN49 = VMA;
OUTPUT S:PIN96 = ARAM<0>;
OUTPUT S:PIN98 = ARAM<1>;
OUTPUT S:PIN94 = ARAM<10>;
OUTPUT S:PIN87 = ARAM<11>;
OUTPUT S:PIN101 = ARAM<2>;
OUTPUT S:PIN103 = ARAM<3>;
OUTPUT S:PIN102 = ARAM<4>;
OUTPUT S:PIN100 = ARAM<5>;
OUTPUT S:PIN97 = ARAM<6>;
OUTPUT S:PIN95 = ARAM<7>;
OUTPUT S:PIN93 = ARAM<8>;
OUTPUT S:PIN91 = ARAM<9>;
OUTPUT S:PIN88 = BA<0>;
OUTPUT S:PIN92 = BA<1>;
OUTPUT S:PIN82 = CAS;
OUTPUT S:PIN124 = IDE_BUF_DIR;
OUTPUT S:PIN128 = IDE_R;
OUTPUT S:PIN110 = IDE_W;
OUTPUT S:PIN79 = LDQ0;
OUTPUT S:PIN78 = LDQ1;
OUTPUT S:PIN75 = LE_RAM_020;
OUTPUT S:PIN80 = MEM_WE;
OUTPUT S:PIN85 = RAS;
OUTPUT S:PIN77 = UDQ0;
OUTPUT S:PIN76 = UDQ1;
OUTPUT S:PIN7 = CLK_020;
OUTPUT S:PIN70 = LE_020_RAM;
OUTPUT S:PIN61 = AMIGA_BUS_DATA_DIR;
OUTPUT S:PIN60 = AMIGA_BUS_ENABLE_LOW;
OUTPUT S:PIN28 = DSACK<0>;
OUTPUT S:PIN46 = E;
OUTPUT S:PIN117 = ROM_OE;
OUTPUT S:PIN59 = AMIGA_BUS_ENABLE_HIGH;
OUTPUT S:PIN31 = DSACK<1>;
OUTPUT S:PIN106 = CLK_PLL_REF;
OUTPUT S:PIN81 = CLK_RAM;
OUTPUT S:PIN131 = IDE_A<0>;
OUTPUT S:PIN129 = IDE_A<1>;
OUTPUT S:PIN130 = IDE_A<2>;
OUTPUT S:PIN133 = IDE_CS<0>;
OUTPUT S:PIN132 = IDE_CS<1>;
OUTPUT S:PIN126 = IDE_RESET;
TRIOUT S:PIN105 = S<1>;
OUTPUT S:PIN104 = S<0>;
OUTPUT S:PIN120 = ROM_B<1>;
OUTPUT S:PIN121 = ROM_B<0>;
OUTPUT S:PIN25 = CDIS;
OUTPUT S:PIN86 = ARAM<12>;
OUTPUT S:PIN119 = ROM_WE;
OUTPUT S:PIN83 = CLK_EN;
OUTPUT S:PIN26 = AVEC;

/* timing arc definitions */
AS_000_AMIGA_BUS_DATA_DIR_delay: DELAY AS_000 AMIGA_BUS_DATA_DIR;
RW_020_AMIGA_BUS_DATA_DIR_delay: DELAY RW_020 AMIGA_BUS_DATA_DIR;
RW_000_AMIGA_BUS_DATA_DIR_delay: DELAY RW_000 AMIGA_BUS_DATA_DIR;
AS_020_AMIGA_BUS_ENABLE_HIGH_delay: DELAY AS_020 AMIGA_BUS_ENABLE_HIGH;
AS_020_AS_000_delay: DELAY (ENABLE_HIGH) AS_020 AS_000;
AS_000_AS_020_delay: DELAY (ENABLE_HIGH) AS_000 AS_020;
CLK_000_CLK_PLL_REF_delay: DELAY CLK_000 CLK_PLL_REF;
CLK_PLL_CLK_RAM_delay: DELAY CLK_PLL CLK_RAM;
RW_020_D<28>_delay: DELAY (ENABLE_HIGH) RW_020 D<28>;
AS_020_D<28>_delay: DELAY (ENABLE_HIGH) AS_020 D<28>;
RW_020_D<29>_delay: DELAY (ENABLE_HIGH) RW_020 D<29>;
AS_020_D<29>_delay: DELAY (ENABLE_HIGH) AS_020 D<29>;
AS_020_D<30>_delay: DELAY (ENABLE_HIGH) AS_020 D<30>;
RW_020_D<30>_delay: DELAY (ENABLE_HIGH) RW_020 D<30>;
RW_020_D<31>_delay: DELAY (ENABLE_HIGH) RW_020 D<31>;
AS_020_D<31>_delay: DELAY (ENABLE_HIGH) AS_020 D<31>;
AS_000_DS_020_delay: DELAY (ENABLE_HIGH) AS_000 DS_020;
A<9>_IDE_A<0>_delay: DELAY A<9> IDE_A<0>;
A<10>_IDE_A<1>_delay: DELAY A<10> IDE_A<1>;
A<11>_IDE_A<2>_delay: DELAY A<11> IDE_A<2>;
A<12>_IDE_CS<0>_delay: DELAY A<12> IDE_CS<0>;
A<13>_IDE_CS<1>_delay: DELAY A<13> IDE_CS<1>;
RESET_IDE_RESET_delay: DELAY RESET IDE_RESET;
AUTO_BOOT_ROM_OE_delay: DELAY AUTO_BOOT ROM_OE;
CLK_PLL_RW_020_delay: DELAY (ENABLE_HIGH) CLK_PLL RW_020;
CLK_PLL_AS_020_delay: DELAY (ENABLE_HIGH) CLK_PLL AS_020;
CLK_PLL_UDS_000_delay: DELAY (ENABLE_HIGH) CLK_PLL UDS_000;
CLK_PLL_LDS_000_delay: DELAY (ENABLE_HIGH) CLK_PLL LDS_000;
CLK_PLL_AS_000_delay: DELAY (ENABLE_HIGH) CLK_PLL AS_000;
CLK_PLL_DS_020_delay: DELAY (ENABLE_HIGH) CLK_PLL DS_020;
CLK_PLL_RW_000_delay: DELAY (ENABLE_HIGH) CLK_PLL RW_000;
CLK_PLL_D<28>_delay: DELAY (ENABLE_HIGH) CLK_PLL D<28>;
CLK_PLL_D<29>_delay: DELAY (ENABLE_HIGH) CLK_PLL D<29>;
CLK_PLL_D<30>_delay: DELAY (ENABLE_HIGH) CLK_PLL D<30>;
CLK_PLL_D<31>_delay: DELAY (ENABLE_HIGH) CLK_PLL D<31>;
CLK_PLL_SIZE<1>_delay: DELAY (ENABLE_HIGH) CLK_PLL SIZE<1>;
CLK_PLL_SIZE<0>_delay: DELAY (ENABLE_HIGH) CLK_PLL SIZE<0>;
CLK_PLL_A_0_delay: DELAY (ENABLE_HIGH) CLK_PLL A_0;
CLK_PLL_BERR_delay: DELAY (ENABLE_HIGH) CLK_PLL BERR;
CLK_PLL_DTACK_delay: DELAY (ENABLE_HIGH) CLK_PLL DTACK;
CLK_PLL_BG_000_delay: DELAY CLK_PLL BG_000;
CLK_PLL_BR_020_delay: DELAY CLK_PLL BR_020;
CLK_PLL_IPL_020<0>_delay: DELAY CLK_PLL IPL_020<0>;
CLK_PLL_IPL_020<1>_delay: DELAY CLK_PLL IPL_020<1>;
CLK_PLL_IPL_020<2>_delay: DELAY CLK_PLL IPL_020<2>;
CLK_PLL_OE_020_RAM_delay: DELAY CLK_PLL OE_020_RAM;
CLK_PLL_OE_RAM_020_delay: DELAY CLK_PLL OE_RAM_020;
CLK_PLL_ROM_EN_delay: DELAY CLK_PLL ROM_EN;
CLK_PLL_VMA_delay: DELAY CLK_PLL VMA;
CLK_PLL_ARAM<0>_delay: DELAY CLK_PLL ARAM<0>;
CLK_PLL_ARAM<1>_delay: DELAY CLK_PLL ARAM<1>;
CLK_PLL_ARAM<10>_delay: DELAY CLK_PLL ARAM<10>;
CLK_PLL_ARAM<11>_delay: DELAY CLK_PLL ARAM<11>;
CLK_PLL_ARAM<2>_delay: DELAY CLK_PLL ARAM<2>;
CLK_PLL_ARAM<3>_delay: DELAY CLK_PLL ARAM<3>;
CLK_PLL_ARAM<4>_delay: DELAY CLK_PLL ARAM<4>;
CLK_PLL_ARAM<5>_delay: DELAY CLK_PLL ARAM<5>;
CLK_PLL_ARAM<6>_delay: DELAY CLK_PLL ARAM<6>;
CLK_PLL_ARAM<7>_delay: DELAY CLK_PLL ARAM<7>;
CLK_PLL_ARAM<8>_delay: DELAY CLK_PLL ARAM<8>;
CLK_PLL_ARAM<9>_delay: DELAY CLK_PLL ARAM<9>;
CLK_PLL_BA<0>_delay: DELAY CLK_PLL BA<0>;
CLK_PLL_BA<1>_delay: DELAY CLK_PLL BA<1>;
CLK_PLL_CAS_delay: DELAY CLK_PLL CAS;
CLK_PLL_IDE_BUF_DIR_delay: DELAY CLK_PLL IDE_BUF_DIR;
CLK_PLL_IDE_R_delay: DELAY CLK_PLL IDE_R;
CLK_PLL_IDE_W_delay: DELAY CLK_PLL IDE_W;
CLK_PLL_LDQ0_delay: DELAY CLK_PLL LDQ0;
CLK_PLL_LDQ1_delay: DELAY CLK_PLL LDQ1;
CLK_PLL_LE_RAM_020_delay: DELAY CLK_PLL LE_RAM_020;
CLK_PLL_MEM_WE_delay: DELAY CLK_PLL MEM_WE;
CLK_PLL_RAS_delay: DELAY CLK_PLL RAS;
CLK_PLL_UDQ0_delay: DELAY CLK_PLL UDQ0;
CLK_PLL_UDQ1_delay: DELAY CLK_PLL UDQ1;
CLK_PLL_CLK_020_delay: DELAY CLK_PLL CLK_020;
CLK_PLL_LE_020_RAM_delay: DELAY CLK_PLL LE_020_RAM;
CLK_PLL_AMIGA_BUS_DATA_DIR_delay: DELAY CLK_PLL AMIGA_BUS_DATA_DIR;
CLK_PLL_AMIGA_BUS_ENABLE_LOW_delay: DELAY CLK_PLL AMIGA_BUS_ENABLE_LOW;
CLK_PLL_DSACK<0>_delay: DELAY CLK_PLL DSACK<0>;
CLK_PLL_E_delay: DELAY CLK_PLL E;
CLK_PLL_ROM_OE_delay: DELAY CLK_PLL ROM_OE;
CLK_PLL_AMIGA_BUS_ENABLE_HIGH_delay: DELAY CLK_PLL AMIGA_BUS_ENABLE_HIGH;
CLK_PLL_DSACK<1>_delay: DELAY CLK_PLL DSACK<1>;

/* timing check arc definitions */
A<10>_CLK_PLL_setup: SETUP(POSEDGE) A<10> CLK_PLL;
A<11>_CLK_PLL_setup: SETUP(POSEDGE) A<11> CLK_PLL;
A<12>_CLK_PLL_setup: SETUP(POSEDGE) A<12> CLK_PLL;
A<13>_CLK_PLL_setup: SETUP(POSEDGE) A<13> CLK_PLL;
A<14>_CLK_PLL_setup: SETUP(POSEDGE) A<14> CLK_PLL;
A<15>_CLK_PLL_setup: SETUP(POSEDGE) A<15> CLK_PLL;
A<16>_CLK_PLL_setup: SETUP(POSEDGE) A<16> CLK_PLL;
A<17>_CLK_PLL_setup: SETUP(POSEDGE) A<17> CLK_PLL;
A<18>_CLK_PLL_setup: SETUP(POSEDGE) A<18> CLK_PLL;
A<19>_CLK_PLL_setup: SETUP(POSEDGE) A<19> CLK_PLL;
A<1>_CLK_PLL_setup: SETUP(POSEDGE) A<1> CLK_PLL;
A<20>_CLK_PLL_setup: SETUP(POSEDGE) A<20> CLK_PLL;
A<21>_CLK_PLL_setup: SETUP(POSEDGE) A<21> CLK_PLL;
A<22>_CLK_PLL_setup: SETUP(POSEDGE) A<22> CLK_PLL;
A<23>_CLK_PLL_setup: SETUP(POSEDGE) A<23> CLK_PLL;
A<2>_CLK_PLL_setup: SETUP(POSEDGE) A<2> CLK_PLL;
A<3>_CLK_PLL_setup: SETUP(POSEDGE) A<3> CLK_PLL;
A<4>_CLK_PLL_setup: SETUP(POSEDGE) A<4> CLK_PLL;
A<5>_CLK_PLL_setup: SETUP(POSEDGE) A<5> CLK_PLL;
A<6>_CLK_PLL_setup: SETUP(POSEDGE) A<6> CLK_PLL;
A<7>_CLK_PLL_setup: SETUP(POSEDGE) A<7> CLK_PLL;
A<8>_CLK_PLL_setup: SETUP(POSEDGE) A<8> CLK_PLL;
A<9>_CLK_PLL_setup: SETUP(POSEDGE) A<9> CLK_PLL;
AS_000_CLK_PLL_setup: SETUP(POSEDGE) AS_000 CLK_PLL;
AS_020_CLK_PLL_setup: SETUP(POSEDGE) AS_020 CLK_PLL;
A_0_CLK_PLL_setup: SETUP(POSEDGE) A_0 CLK_PLL;
BERR_CLK_PLL_setup: SETUP(POSEDGE) BERR CLK_PLL;
BGACK_000_CLK_PLL_setup: SETUP(POSEDGE) BGACK_000 CLK_PLL;
BG_020_CLK_PLL_setup: SETUP(POSEDGE) BG_020 CLK_PLL;
BR_000_CLK_PLL_setup: SETUP(POSEDGE) BR_000 CLK_PLL;
CLK_000_CLK_PLL_setup: SETUP(POSEDGE) CLK_000 CLK_PLL;
D<28>_CLK_PLL_setup: SETUP(POSEDGE) D<28> CLK_PLL;
D<29>_CLK_PLL_setup: SETUP(POSEDGE) D<29> CLK_PLL;
D<30>_CLK_PLL_setup: SETUP(POSEDGE) D<30> CLK_PLL;
D<31>_CLK_PLL_setup: SETUP(POSEDGE) D<31> CLK_PLL;
DS_020_CLK_PLL_setup: SETUP(POSEDGE) DS_020 CLK_PLL;
DTACK_CLK_PLL_setup: SETUP(POSEDGE) DTACK CLK_PLL;
FC<0>_CLK_PLL_setup: SETUP(POSEDGE) FC<0> CLK_PLL;
FC<1>_CLK_PLL_setup: SETUP(POSEDGE) FC<1> CLK_PLL;
IDE_WAIT_CLK_PLL_setup: SETUP(POSEDGE) IDE_WAIT CLK_PLL;
IPL_000<0>_CLK_PLL_setup: SETUP(POSEDGE) IPL_000<0> CLK_PLL;
IPL_000<1>_CLK_PLL_setup: SETUP(POSEDGE) IPL_000<1> CLK_PLL;
IPL_000<2>_CLK_PLL_setup: SETUP(POSEDGE) IPL_000<2> CLK_PLL;
LDS_000_CLK_PLL_setup: SETUP(POSEDGE) LDS_000 CLK_PLL;
MEM_CFG<0>_CLK_PLL_setup: SETUP(POSEDGE) MEM_CFG<0> CLK_PLL;
MEM_CFG<1>_CLK_PLL_setup: SETUP(POSEDGE) MEM_CFG<1> CLK_PLL;
RESET_CLK_PLL_setup: SETUP(POSEDGE) RESET CLK_PLL;
RW_000_CLK_PLL_setup: SETUP(POSEDGE) RW_000 CLK_PLL;
RW_020_CLK_PLL_setup: SETUP(POSEDGE) RW_020 CLK_PLL;
SIZE<0>_CLK_PLL_setup: SETUP(POSEDGE) SIZE<0> CLK_PLL;
SIZE<1>_CLK_PLL_setup: SETUP(POSEDGE) SIZE<1> CLK_PLL;
UDS_000_CLK_PLL_setup: SETUP(POSEDGE) UDS_000 CLK_PLL;
VPA_CLK_PLL_setup: SETUP(POSEDGE) VPA CLK_PLL;
A<10>_CLK_PLL_hold: HOLD(POSEDGE) A<10> CLK_PLL;
A<11>_CLK_PLL_hold: HOLD(POSEDGE) A<11> CLK_PLL;
A<12>_CLK_PLL_hold: HOLD(POSEDGE) A<12> CLK_PLL;
A<13>_CLK_PLL_hold: HOLD(POSEDGE) A<13> CLK_PLL;
A<14>_CLK_PLL_hold: HOLD(POSEDGE) A<14> CLK_PLL;
A<15>_CLK_PLL_hold: HOLD(POSEDGE) A<15> CLK_PLL;
A<16>_CLK_PLL_hold: HOLD(POSEDGE) A<16> CLK_PLL;
A<17>_CLK_PLL_hold: HOLD(POSEDGE) A<17> CLK_PLL;
A<18>_CLK_PLL_hold: HOLD(POSEDGE) A<18> CLK_PLL;
A<19>_CLK_PLL_hold: HOLD(POSEDGE) A<19> CLK_PLL;
A<1>_CLK_PLL_hold: HOLD(POSEDGE) A<1> CLK_PLL;
A<20>_CLK_PLL_hold: HOLD(POSEDGE) A<20> CLK_PLL;
A<21>_CLK_PLL_hold: HOLD(POSEDGE) A<21> CLK_PLL;
A<22>_CLK_PLL_hold: HOLD(POSEDGE) A<22> CLK_PLL;
A<23>_CLK_PLL_hold: HOLD(POSEDGE) A<23> CLK_PLL;
A<2>_CLK_PLL_hold: HOLD(POSEDGE) A<2> CLK_PLL;
A<3>_CLK_PLL_hold: HOLD(POSEDGE) A<3> CLK_PLL;
A<4>_CLK_PLL_hold: HOLD(POSEDGE) A<4> CLK_PLL;
A<5>_CLK_PLL_hold: HOLD(POSEDGE) A<5> CLK_PLL;
A<6>_CLK_PLL_hold: HOLD(POSEDGE) A<6> CLK_PLL;
A<7>_CLK_PLL_hold: HOLD(POSEDGE) A<7> CLK_PLL;
A<8>_CLK_PLL_hold: HOLD(POSEDGE) A<8> CLK_PLL;
A<9>_CLK_PLL_hold: HOLD(POSEDGE) A<9> CLK_PLL;
AS_000_CLK_PLL_hold: HOLD(POSEDGE) AS_000 CLK_PLL;
AS_020_CLK_PLL_hold: HOLD(POSEDGE) AS_020 CLK_PLL;
A_0_CLK_PLL_hold: HOLD(POSEDGE) A_0 CLK_PLL;
BERR_CLK_PLL_hold: HOLD(POSEDGE) BERR CLK_PLL;
BGACK_000_CLK_PLL_hold: HOLD(POSEDGE) BGACK_000 CLK_PLL;
BG_020_CLK_PLL_hold: HOLD(POSEDGE) BG_020 CLK_PLL;
BR_000_CLK_PLL_hold: HOLD(POSEDGE) BR_000 CLK_PLL;
CLK_000_CLK_PLL_hold: HOLD(POSEDGE) CLK_000 CLK_PLL;
D<28>_CLK_PLL_hold: HOLD(POSEDGE) D<28> CLK_PLL;
D<29>_CLK_PLL_hold: HOLD(POSEDGE) D<29> CLK_PLL;
D<30>_CLK_PLL_hold: HOLD(POSEDGE) D<30> CLK_PLL;
D<31>_CLK_PLL_hold: HOLD(POSEDGE) D<31> CLK_PLL;
DS_020_CLK_PLL_hold: HOLD(POSEDGE) DS_020 CLK_PLL;
DTACK_CLK_PLL_hold: HOLD(POSEDGE) DTACK CLK_PLL;
FC<0>_CLK_PLL_hold: HOLD(POSEDGE) FC<0> CLK_PLL;
FC<1>_CLK_PLL_hold: HOLD(POSEDGE) FC<1> CLK_PLL;
IDE_WAIT_CLK_PLL_hold: HOLD(POSEDGE) IDE_WAIT CLK_PLL;
IPL_000<0>_CLK_PLL_hold: HOLD(POSEDGE) IPL_000<0> CLK_PLL;
IPL_000<1>_CLK_PLL_hold: HOLD(POSEDGE) IPL_000<1> CLK_PLL;
IPL_000<2>_CLK_PLL_hold: HOLD(POSEDGE) IPL_000<2> CLK_PLL;
LDS_000_CLK_PLL_hold: HOLD(POSEDGE) LDS_000 CLK_PLL;
MEM_CFG<0>_CLK_PLL_hold: HOLD(POSEDGE) MEM_CFG<0> CLK_PLL;
MEM_CFG<1>_CLK_PLL_hold: HOLD(POSEDGE) MEM_CFG<1> CLK_PLL;
RESET_CLK_PLL_hold: HOLD(POSEDGE) RESET CLK_PLL;
RW_000_CLK_PLL_hold: HOLD(POSEDGE) RW_000 CLK_PLL;
RW_020_CLK_PLL_hold: HOLD(POSEDGE) RW_020 CLK_PLL;
SIZE<0>_CLK_PLL_hold: HOLD(POSEDGE) SIZE<0> CLK_PLL;
SIZE<1>_CLK_PLL_hold: HOLD(POSEDGE) SIZE<1> CLK_PLL;
UDS_000_CLK_PLL_hold: HOLD(POSEDGE) UDS_000 CLK_PLL;
VPA_CLK_PLL_hold: HOLD(POSEDGE) VPA CLK_PLL;

ENDMODEL
